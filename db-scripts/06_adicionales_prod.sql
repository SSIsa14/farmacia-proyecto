-- ===============================================
-- Script adicional: Tokens, roles, admin, carrito y páginas
-- Ejecutar dentro de PHARMACY_DEV, PHARMACY_QA o PHARMACY_PROD
-- ===============================================


ALTER SESSION SET CURRENT_SCHEMA = PHARMACY_PROD;

-- 1 Tabla VERIFICATION_TOKEN
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE VERIFICATION_TOKEN (
          ID_TOKEN         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          TOKEN            VARCHAR2(100) UNIQUE NOT NULL,
          ID_USUARIO       NUMBER NOT NULL,
          FECHA_CREACION   TIMESTAMP DEFAULT SYSTIMESTAMP,
          FECHA_EXPIRACION TIMESTAMP NOT NULL,
          FECHA_VERIFICACION TIMESTAMP,
          CONSTRAINT fk_token_usuario FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO)
      )
   ';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE = -955 THEN NULL; -- Table already exists
      ELSE RAISE;
   END IF;
END;
/

CREATE INDEX idx_verification_token ON VERIFICATION_TOKEN(TOKEN);
CREATE INDEX idx_verification_usuario ON VERIFICATION_TOKEN(ID_USUARIO);

-- 2 Agregar columnas a Usuario
BEGIN
   EXECUTE IMMEDIATE 'ALTER TABLE USUARIO ADD (PERFIL_COMPLETO CHAR(1) DEFAULT ''N'')';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE = -01430 OR SQLCODE = -01450 OR SQLCODE = -01451 THEN NULL;
      ELSE NULL;
   END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'ALTER TABLE USUARIO ADD (PRIMER_LOGIN CHAR(1) DEFAULT ''Y'')';
EXCEPTION
   WHEN OTHERS THEN NULL;
END;
/

UPDATE USUARIO SET PERFIL_COMPLETO = 'Y', PRIMER_LOGIN = 'N' WHERE ACTIVO = 'Y';
COMMIT;

-- 3 Insertar roles si no existen
DECLARE
  v_count NUMBER;
BEGIN
  FOR r IN ('Administrador','Empleado','Paciente','Usuario de Interconexión') LOOP
    SELECT COUNT(*) INTO v_count FROM ROL WHERE NOMBRE_ROL = r;
    IF v_count = 0 THEN
      EXECUTE IMMEDIATE 'INSERT INTO ROL (NOMBRE_ROL) VALUES (''' || r || ''')';
    END IF;
  END LOOP;
END;
/

-- 4 Crear usuario admin si no existe
DECLARE
  v_count NUMBER;
  v_admin_id NUMBER;
  v_admin_role_id NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_count FROM USUARIO WHERE CORREO = 'admin@pharmacy.com';
  
  IF v_count = 0 THEN
    INSERT INTO USUARIO (
      NOMBRE, CORREO, PASSWORD_HASH, ACTIVO, FECHA_CREACION,
      PERFIL_COMPLETO, PRIMER_LOGIN
    ) VALUES (
      'Administrator', 
      'admin@pharmacy.com', 
      '$2a$10$dXJ3SW6G7P50lGmMkkmwe.20cQQubK3.HZWzG3YB1tlRy.fqvM/BG', -- admin
      'Y', SYSTIMESTAMP,
      'Y','N'
    ) RETURNING ID_USUARIO INTO v_admin_id;
    
    SELECT ID_ROL INTO v_admin_role_id FROM ROL WHERE NOMBRE_ROL = 'Administrador';
    
    INSERT INTO USUARIOROL (ID_USUARIO, ID_ROL) VALUES (v_admin_id, v_admin_role_id);
  END IF;
END;
/

COMMIT;

-- 5 Carrito y carrito_detalle
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE CARRITO (
         id_cart               NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
         id_usuario            NUMBER NOT NULL,
         status                CHAR(1) DEFAULT ''A'' CHECK (status IN (''A'',''C'',''X'')),
         fecha_creacion        TIMESTAMP DEFAULT SYSTIMESTAMP,
         fecha_actualizacion   TIMESTAMP DEFAULT SYSTIMESTAMP,
         CONSTRAINT fk_cart_usuario FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario)
      )
   ';
EXCEPTION
   WHEN OTHERS THEN IF SQLCODE = -955 THEN NULL; ELSE RAISE; END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE CARRITO_DETALLE (
         id_cart_item     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
         id_cart          NUMBER NOT NULL,
         id_medicamento   NUMBER NOT NULL,
         cantidad         NUMBER NOT NULL CHECK (cantidad > 0),
         precio_unitario  NUMBER(10,2) NOT NULL,
         CONSTRAINT fk_cart_item_cart FOREIGN KEY (id_cart) REFERENCES Carrito(id_cart),
         CONSTRAINT fk_cart_item_medicamento FOREIGN KEY (id_medicamento) REFERENCES Medicamento(id_medicamento)
      )
   ';
EXCEPTION
   WHEN OTHERS THEN IF SQLCODE = -955 THEN NULL; ELSE RAISE; END IF;
END;
/

-- 6 Página, NavItem, PageModification
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE PAGINA (
         id_pagina         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
         titulo            VARCHAR2(200) NOT NULL,
         slug              VARCHAR2(100) UNIQUE NOT NULL,
         contenido         CLOB,
         tipo_pagina       VARCHAR2(50) NOT NULL,
         estado            VARCHAR2(20) DEFAULT ''BORRADOR'' CHECK (estado IN (''BORRADOR'',''PUBLICADO'',''RECHAZADO'')),
         fecha_creacion    TIMESTAMP DEFAULT SYSTIMESTAMP,
         fecha_modificacion TIMESTAMP DEFAULT SYSTIMESTAMP,
         id_autor          NUMBER,
         visible           CHAR(1) DEFAULT ''N'' CHECK (visible IN (''Y'',''N'')),
         CONSTRAINT fk_pagina_usuario FOREIGN KEY (id_autor) REFERENCES Usuario(id_usuario)
      )
   ';
EXCEPTION
   WHEN OTHERS THEN IF SQLCODE = -955 THEN NULL; ELSE RAISE; END IF;
END;
/

-- NavItem
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE NAV_ITEM (
         id_nav_item      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
         id_pagina        NUMBER,
         etiqueta         VARCHAR2(100) NOT NULL,
         path             VARCHAR2(200),
         orden            NUMBER,
         activo           CHAR(1) DEFAULT ''Y'',
         CONSTRAINT fk_nav_item_pagina FOREIGN KEY (id_pagina) REFERENCES Pagina(id_pagina)
      )
   ';
EXCEPTION
   WHEN OTHERS THEN IF SQLCODE = -955 THEN NULL; ELSE RAISE; END IF;
END;
/

-- PageModification
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE PAGE_MODIFICATION (
         id_modificacion   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
         id_pagina         NUMBER,
         contenido_nuevo   CLOB,
         comentario        VARCHAR2(500),
         estado            VARCHAR2(20) DEFAULT ''PENDIENTE'' CHECK (estado IN (''PENDIENTE'',''APROBADO'',''RECHAZADO'')),
         fecha_modificacion TIMESTAMP DEFAULT SYSTIMESTAMP,
         id_editor         NUMBER NOT NULL,
         id_moderador      NUMBER,
         CONSTRAINT fk_modif_pagina FOREIGN KEY (id_pagina) REFERENCES Pagina(id_pagina),
         CONSTRAINT fk_modif_editor FOREIGN KEY (id_editor) REFERENCES Usuario(id_usuario),
         CONSTRAINT fk_modif_moderador FOREIGN KEY (id_moderador) REFERENCES Usuario(id_usuario)
      )
   ';
EXCEPTION
   WHEN OTHERS THEN IF SQLCODE = -955 THEN NULL; ELSE RAISE; END IF;
END;
/

-- Trigger de actualización automática de timestamp en carrito
BEGIN
   EXECUTE IMMEDIATE '
      CREATE OR REPLACE TRIGGER TR_UPDATE_CARRITO_TIMESTAMP
      BEFORE UPDATE ON CARRITO
      FOR EACH ROW
      BEGIN
          :NEW.fecha_actualizacion := SYSTIMESTAMP;
      END;
   ';
EXCEPTION
   WHEN OTHERS THEN IF SQLCODE = -4080 THEN NULL; ELSE RAISE; END IF;
END;
/

COMMIT;
