version: "3.8"

volumes:
  oracle-data:

networks:
  pharmacy-network:
    external: true

services:
  oracle-db:
    profiles: ["db"] 
    image: gvenzl/oracle-xe:latest
    container_name: oracle-xe-pharmacy
    environment:
      - ORACLE_PASSWORD=LocalOraclePass2
    ports:
      - "1521:1521"
    volumes:
      - oracle-data:/opt/oracle/oradata
      - /home/sofi/farmacia-proyecto/db-scripts:/docker-entrypoint-initdb.d
    networks:
      - pharmacy-network

  # Backend DEV
  backend-dev:
    profiles: ["dev"]
    build:
      context: ./pharmacy
      dockerfile: Dockerfile
    container_name: pharmacy-backend-dev
    ports:
      - "8082:8080"
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: dev
    networks:
      - pharmacy-network
    
 
  # Frontend DEV
  frontend-dev:
    profiles: ["dev"]
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        CONFIGURATION: development
    container_name: pharmacy-frontend-dev
    ports:
      - "4300:80"
    depends_on:
      - backend-dev
    networks:
      - pharmacy-network

  # Backend QA
  backend-qa:
    profiles: ["qa"]
    build:
      context: ./pharmacy
      dockerfile: Dockerfile
    container_name: pharmacy-backend-qa
    ports:
      - "8083:8080"
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: qa
    networks:
      - pharmacy-network

  # Frontend QA
  frontend-qa:
    profiles: ["qa"]
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        CONFIGURATION: qa
    container_name: pharmacy-frontend-qa
    ports:
      - "4301:80"
    depends_on:
      - backend-qa
    networks:
      - pharmacy-network


  # Backend PROD
  backend-prod:
    profiles: ["prod"]
    build:
      context: ./pharmacy
      dockerfile: Dockerfile
    container_name: pharmacy-backend-prod
    ports:
      - "8085:8080"
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - pharmacy-network
    

  # Frontend PROD
  frontend-prod:
    profiles: ["prod"]
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        CONFIGURATION: production
    container_name: pharmacy-frontend-prod
    ports:
      - "4305:80"
    depends_on:
      - backend-prod
    networks:
      - pharmacy-network

